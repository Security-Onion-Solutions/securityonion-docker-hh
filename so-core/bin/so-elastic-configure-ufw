#!/bin/bash

. /opt/so/bin/so-elastic-common

. /opt/so/conf/securityonion.conf

# If ufw is active, add firewall rules to DOCKER-USER and ensure they will persist after reboot
if [ -x /usr/sbin/ufw ] && /usr/sbin/ufw status | grep -q "Status: active"; then
	# We need to ensure proper rules are in place in the running firewall before starting containers
	if ! iptables -L DOCKER-USER -v | grep -q DROP.*all.*\!docker0.*docker0; then
		# First, we need to insert the DROP rule at the top of DOCKER-USER
		iptables -I DOCKER-USER ! -i docker0 -o docker0 -j DROP
		# Next, we need to insert the stateful rule right above the DROP rule
		iptables -I DOCKER-USER ! -i docker0 -o docker0 -m state --state RELATED,ESTABLISHED -j ACCEPT
	fi

	# We need to ensure proper rules are in place after reboot before starting containers
	if ! grep -q "DOCKER-USER" /etc/ufw/after.rules; then
		# First, we need to add DOCKER-USER to the filter section like this:
		# :ufw-after-forward - [0:0]
		# :DOCKER-USER - [0:0]
		sed -i '/:ufw-after-forward/a :DOCKER-USER - [0:0]' /etc/ufw/after.rules
		# Next, we need to add lines like this:
		# # Configure Docker rules
		# # /usr/sbin/so-allow will add new rules here for access to ports exposed by Docker containers
		# -A DOCKER-USER ! -i docker0 -o docker0 -m state --state RELATED,ESTABLISHED -j ACCEPT
		# -A DOCKER-USER ! -i docker0 -o docker0 -j DROP
		sed -i "/BROADCAST/{N;s/$/\n# Configure Docker rules\n# \/usr\/sbin\/so-allow will add new rules here for access to ports exposed by Docker containers\n-A DOCKER-USER ! -i docker0 -o docker0 -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A DOCKER-USER ! -i docker0 -o docker0 -j DROP\n/}" /etc/ufw/after.rules
	fi
fi
