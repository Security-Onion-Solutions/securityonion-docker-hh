pipeline {
	agent none
	environment {
		IMAGE_NAME = "docker.io/soshybridhunter/so-auth-ui"
		IMAGE_VERSION = "HH1.1.4"
	}
	stages {
		stage("Test") { 
			environment { 
				HOME = "${env.WORKSPACE}"
				npm_config_cache = "npm-cache"
			}
			agent {
				docker {
					image "node"
				}
			}
			steps {
				echo "Running Javascript unit tests ..."
				checkout scm
				dir('ui') {
					sh """
					npm ci
					echo "This is where unit tests will run"
					# npm run test:unit
					"""
				}
			}
			post {
				always {
					echo "Javascript unit tests: ${currentBuild.currentResult}"
					echo "This is where unit tests will be published"
					// junit "ui/test-reports/*.xml" 
				}
			}
		}
		stage("Build") {
			agent any
			environment { 
				DOCKER_CONTENT_TRUST = 1
				DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE = credentials("Docker_Signing_Key")
			}
			steps {
				echo "Building ${IMAGE_NAME} Docker image ..."
				dir("ui") {
					script {
						docker.build("${IMAGE_NAME}:${IMAGE_VERSION}")
					}
				}
			}
			post {
				always {
					echo "UI Docker image build: ${currentBuild.currentResult}"
				}
			}
		}
		stage("Sign & Publish") {
			agent any
			environment { DOCKER_CONTENT_TRUST = 1 }
			when { branch "master" }
			steps {
				echo "Publishing ${IMAGE_NAME} Docker image ..."
				sh "docker trust sign ${IMAGE_NAME}:${IMAGE_VERSION}"
			}
			post {
				always {
					echo "UI Docker image push: ${currentBuild.currentResult}"
				}
			}
		}
	}
}
