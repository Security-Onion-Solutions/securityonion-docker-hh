# Author: Justin Henderson
#         SANS Instructor and author of SANS SEC555: SIEM and Tactical Analytics
# Email: justin@hasecuritysolution.com
# Last Update: 12/9/2016

filter {
  if [type] == "bro_x509" {
    # If SubjectCommonName exists run a frequency analysis against it.  In order for this to work you must have
    # freq.py and the corresponding frequency table in /opt/freq/.  This is a huge boost to security
    # and I highly recommend you set this up.  Example, if a frequency score less than 6 exists
    # then there is a likelihood that something malicious is happening.
    #
    # For higher accuracy, please generate your own frequency tables.  For questions on setup,
    # please refer to https://github.com/SMAPPER
    if [issuer_common_name]{
      mutate {
        add_field => { "freq_common_name" => "%{issuer_common_name}" }
      }
      mutate {
        gsub => [ "freq_common_name", "\W", "" ]
      }
      rest {
        request => {
          url => "http://freqserver:10004/measure/%{freq_common_name}"
        }
        sprintf => true
        json => false
        target => "issuer_common_name_frequency_score"
      }
      mutate {
        remove_field => [ "freq_common_name" ]
      }
      if [issuer_common_name_frequency_score] {
        mutate {
          convert => [ "issuer_common_name_frequency_score", "float" ]
          add_field => { "frequency_scores" => "%{issuer_common_name_frequency_score}" }
        }
      }
    }
    if [issuer_organization]{
      mutate {
        add_field => { "freq_common_name" => "%{issuer_organization}" }
      }
      mutate {
        gsub => [ "freq_common_name", "\W", "" ]
      }
      rest {
        request => {
          url => "http://freqserver:10004/measure/%{freq_common_name}"
        }
        sprintf => true
        json => false
        target => "issuer_organization_frequency_score"
      }
      mutate {
        remove_field => [ "freq_common_name" ]
      }
      if [issuer_organization_frequency_score] {
        mutate {
          convert => [ "issuer_organization_frequency_score", "float" ]
          add_field => { "frequency_scores" => "%{issuer_organization_frequency_score}" }
        }
      }
    }
    if [certificate_common_name]{
      mutate {
        add_field => { "freq_common_name" => "%{certificate_common_name}" }
      }
      mutate {
        gsub => [ "freq_common_name", "\W", "" ]
      }
      rest {
        request => {
          url => "http://freqserver:10004/measure/%{freq_common_name}"
        }
        sprintf => true
        json => false
        target => "certificate_common_name_frequency_score"
      }
      mutate {
        remove_field => [ "freq_common_name" ]
      }
      if [certificate_common_name_frequency_score] {
        mutate {
          convert => [ "certificate_common_name_frequency_score", "float" ]
          add_field => { "frequency_scores" => "%{certificate_common_name_frequency_score}" }
        }
      }
    }
	mutate {
	  #add_tag => [ "conf_file_8505"]
	}
  }
}
